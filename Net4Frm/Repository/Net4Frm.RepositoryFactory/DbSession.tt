<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\..\Infrastructure\Net4Frm.Template4\Model1.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using Net4Frm.IRepository;
using Net4Frm.Repository;
namespace Net4Frm.RepositoryFactory
{
    public partial class DbSession : IDbSession
    {
<#
// Emit Entity Types

foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		private I<#=entity.Name#>Repository _<#=entity.Name#>Repository;
        public I<#=entity.Name#>Repository <#=entity.Name#>Repository
        {
            get
            {
                if (null == _<#=entity.Name#>Repository)
                {
                    _<#=entity.Name#>Repository = new <#=entity.Name#>Repository(this.unitOfWork);
                }
                return _<#=entity.Name#>Repository;
            }
        }
<#}#>
	}
}